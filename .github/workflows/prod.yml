name: Deploy Application

on:
  push:
    branches: [teste-aws-frontEnd]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Checkout do código do backend
      - name: Checkout Backend Code
        uses: actions/checkout@v4

      # Checkout do código da arquitetura em outra pasta
      - name: Checkout Architecture Code
        uses: actions/checkout@v4
        with:
          repository: seriikmota/generic-architecture
          path: generic-architecture

      # Checkout do código do frontend
      - name: Checkout Frontend Code
        uses: actions/checkout@v4
        with:
          repository: Lipolys/personal-system-frontend
          path: personal-system-frontend

      # Configuração do Java
      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      # Configuração do Node.js para o frontend
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      # Cache Maven
      - name: Cache Maven Dependencies
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven

      # Build da arquitetura
      - name: Build Architecture
        run: |
          cd generic-architecture
          mvn clean install -DskipTests

      # Build do backend
      - name: Build Backend
        run: mvn clean install -DskipTests

      # Instalação e build do frontend
      - name: Build Frontend
        run: |
          cd personal-system-frontend
          npm install
          npm run build -- --output-path=dist

      # Login no Docker Hub
      - name: Login Docker Hub
        run: docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}

      # Build da imagem Docker
      - name: Build Docker Image
        run: |
          docker build \
          --build-arg FRONTEND_BUILD_DIR=personal-system-frontend/dist \
          -t piasisaulo/personal-system-backend .

      # Push da imagem Docker
      - name: Push Docker Image
        run: docker push piasisaulo/personal-system-backend

  deploy:
    needs: build
    runs-on: self-hosted

    steps:
      # Pull da imagem do Docker Hub
      - name: Pull image from Docker Hub
        run: sudo docker pull piasisaulo/personal-system-backend:latest

      # Remove o container existente
      - name: Remove Existing Container
        run: sudo docker rm -f deploy_personal || true

      # Executar o novo container
      - name: Run Docker Container
        run: |
          sudo docker run -d -p 8080:8080 \
          -e SPRING_DATASOURCE_USERNAME=${{secrets.SPRING_DATASOURCE_USERNAME}} \
          -e SPRING_DATASOURCE_PASSWORD=${{secrets.SPRING_DATASOURCE_PASSWORD}} \
          -e SPRING_DATASOURCE_URL=${{secrets.SPRING_DATASOURCE_URL}} \
          -e SPRING_PROFILES_ACTIVE="docker" \
          --name deploy_personal piasisaulo/personal-system-backend:latest
